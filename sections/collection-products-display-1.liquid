{{ 'collection-classic.css' | asset_url | stylesheet_tag }}

<style>
  img.lazyload:not([src]) {
    visibility: hidden;
  }

  /* Blur-up effect for LQIP */
  .blur-up {
    -webkit-filter: blur(5px);
    filter: blur(5px);
    transition: filter 400ms, -webkit-filter 400ms;
  }

  .blur-up.lazyloaded {
    -webkit-filter: blur(0);
    filter: blur(0);
  }

  /* Smooth transitions for hover effect */
  .product-image, .product-image-hover {
    transition: opacity 400ms ease;
  }

  .product-image-hover {
    opacity: 0;
  }

  /* Fix for product image hover */
  .collection-product-container {
    position: relative;
    display: block;
    overflow: hidden;
  }

  .collection-product-container .product-image,
  .collection-product-container .product-image-hover {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .collection-product-container .product-image-hover {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  /* Product aspect ratio container */
  .aspect-ratio-container {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  /* Default is natural, no padding needed */

  /* Square aspect ratio 1:1 */
  .aspect-ratio-1-1 {
    padding-bottom: 100%; /* 1:1 aspect ratio (height = width) */
  }

  /* Landscape aspect ratio 4:3 */
  .aspect-ratio-4-3 {
    padding-bottom: 75%; /* 4:3 aspect ratio (height = 3/4 of width) */
  }

  /* Portrait aspect ratio 3:4 */
  .aspect-ratio-3-4 {
    padding-bottom: 133.33%; /* 3:4 aspect ratio (height = 4/3 of width) */
  }

  /* Widescreen aspect ratio 16:9 */
  .aspect-ratio-16-9 {
    padding-bottom: 56.25%; /* 16:9 aspect ratio (height = 9/16 of width) */
  }

  /* Content positioning inside aspect ratio container */
  .aspect-ratio-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Ensures image maintains aspect ratio within container */
  }

  /* Improved collection item styling */
  .collection-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 10px;
  }

  /* Ensure all items have consistent height */
  .collection-item .collection-product-container {
    display: block;
    width: 100%;
  }

  /* Product title styling */
  .prouduct-title {
    width: 100%;
    text-align: center;
    margin-top: 20px;
    margin-bottom: 4px;
  }

  /* Product price styling */
  .collection-product-price {
    width: 100%;
    text-align: center;
    margin: 2px 0;
  }

  .collection-product-compare-price {
    width: 100%;
    text-align: center;
    margin: 2px 0;
  }

  .collection-product-container:hover .product-image-hover {
    opacity: 1;
  }

  .collection-product-container:hover .product-image {
    opacity: 0;
  }
</style>

<div id="collection-products-display-1"></div>

<div class="logo-container collection" style="position: relative">
  {% comment %}Mobile Search Icon{% endcomment %}
  {% if section.settings.show_search_icon %}
    <svg
      id="search-icon-mobile"
      class="search-icon-mobile"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      style=""
    >
      <path d="M23.8348 22.5739L17.7882 16.5273C17.6804 16.4195 17.5398 16.3633 17.3898 16.3633H16.907C18.5147 14.6243 19.499 12.3041 19.499 9.74952C19.499 4.36385 15.1352 0 9.74952 0C4.36385 0 0 4.36385 0 9.74952C0 15.1352 4.36385 19.499 9.74952 19.499C12.3041 19.499 14.6243 18.5147 16.3633 16.9117V17.3898C16.3633 17.5398 16.4242 17.6804 16.5273 17.7882L22.5739 23.8348C22.7942 24.0551 23.1504 24.0551 23.3707 23.8348L23.8348 23.3707C24.0551 23.1504 24.0551 22.7942 23.8348 22.5739ZM9.74952 17.9991C5.18881 17.9991 1.49993 14.3102 1.49993 9.74952C1.49993 5.18881 5.18881 1.49993 9.74952 1.49993C14.3102 1.49993 17.9991 5.18881 17.9991 9.74952C17.9991 14.3102 14.3102 17.9991 9.74952 17.9991Z" fill="{{ section.settings.search_icon_color }}"></path>
    </svg>
  {% endif %}
  {% if section.settings.show_filter_icon %}
    <div
      class="filter-container-mobile"
      style="
        z-index: 1;
        position: absolute;
        bottom: 2px;
        {% if section.settings.show_search_icon %}
        left: 67px;
        {% else %}
        left: 37px;
        {% endif %}
        height: 19px;
        width: 20px; z-index: 1;
      "
    >
      <svg
        id="filter-icon"
        class="filter-icon"
        width="26"
        height="26"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style="margin-bottom: 23px; cursor: pointer;"
      >
        <path d="M22 3H2L10 12.46V19L14 21V12.46L22 3Z" stroke="{{ section.settings.filter_icon_color }}" stroke-width="1.1" stroke-linecap="round" stroke-linejoin="round" fill="none"/>
      </svg>
    </div>
  {% endif %}
  {%- if collection -%}
  {%- else -%}
    <a data-w-id="2f3b53d5-a54c-c842-2fc8-1e63eee6812e" href="#" class="filter-btn">
      <svg width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"/>
        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"/>
        <g id="SVGRepo_iconCarrier"> <path d="M4 18L20 18" stroke="{{ section.settings.bg-color }}" stroke-width="0.8" stroke-linecap="round"/> <path d="M4 12L20 12" stroke="{{ section.settings.bg-color }}" stroke-width="0.8" stroke-linecap="round"/> <path d="M4 6L20 6" stroke="{{ section.settings.bg-color }}" stroke-width="0.8" stroke-linecap="round"/> </g>
      </svg>
    </a>
  {%- endif -%}
  {% if settings.show_collection_logo %}
    <a style="" href="{{ routes.root_url }}" class="logo-link w-inline-block">
      {% if settings.collection_screen_logo %}
        <img
          src="{{ settings.collection_screen_logo | image_url }}"
          style="width: {{ settings.collection_screen_logo_size }}px"
          loading="lazy"
          alt=""
          class="logo"
        >
      {% else %}
        <img
          style="width: {{ settings.collection_screen_logo_size }}px"
          src="{{ 'Supreme-dummy.png' | asset_url }}"
          loading="lazy"
          alt=""
          class="logo"
        >
      {% endif %}
    </a>
  {% endif %}
  {% if section.settings.show_date_time %}
    <div class="date-time-container">
      <div class="date" style="color: {{ section.settings.index_date_color }}">{{ 'tn7d8e379f' | t }}</div>
      <div class="time" style="color: {{ section.settings.index_time_color }}">{{ 't589b2285' | t }}</div>
    </div>
  {% endif %}
  {% render 'cart-count',
    cart_text_margin_top: 10,
    cart_text_color: section.settings.cart_text_color,
    cart_bg_color: section.settings.cart_number_bg_color,
    cart_count_color: section.settings.cart_number_color
  %}
</div>

{% comment %}END HEADER{% endcomment %}

<div
  class="site-container"
  style="
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-left: 0;
      margin-right: 0;
      width: 100%;
      position: relative;
      bottom: 0;
    height: 100%;
  "
>
  <div
    class="shop-section"
    style="
      {% if section.settings.reverse_desktop_menu == "right" %}
        flex-direction: row;
      {% endif %}
      width: 72%;
        position: relative;
        top: initial;
        left: initial;
        transform:none;
    "
  >
    <div
      class="middle w-col w-col-stack shop-container desktop"
      style=" width: 100%;"
    >
      {%- if collection -%}
        {% capture listItems %}
{% paginate collection.products by 24 %}
{% for item in collection.products %}
  <div style="width: {{ settings.product-size }}%; 
    display: flex; 
    flex-direction: column; 
    align-items: center; 
    min-width: 1px;
    " role="listitem" class="collection-item w-dyn-item">
    <a style="width:100%; {% if settings.product_aspect_ratio == 'natural' %}height:auto;{% else %}height:0;{% endif %} border-radius: {{ section.settings.product_bg_radius }}px; position: relative; 
      background-color: {% if section.settings.product_bg_transparent == false %}{{ section.settings.product_bg_color }}; {% endif %}"href="{{ item.url | within: collection }}" class="link-block-2 w-inline-block collection-product-container {% if settings.product_aspect_ratio != 'natural' %}aspect-ratio-container aspect-ratio-{{ settings.product_aspect_ratio | replace: ':', '-' }}{% endif %}">
      <img
            width="390px"
            height="390px"
            {% if settings.enable_lazy_loading %}
            src="{{ item.featured_media.preview_image | img_url: '50x' }}"
            data-sizes="auto"
            data-srcset="
            {{ item.featured_media.preview_image | img_url: '325x' }} 325w,
    		{{ item.featured_media.preview_image | img_url: '400x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '500x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '600x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '700x' }} 500w,
    		{{ item.featured_media.preview_image | img_url: '1024x' }} 1524w"
            {% else %} 
            src="{{ item.featured_media.preview_image | img_url: 'master' }}" alt="{{ item.featured_media.preview_image.alt }}" 
            {% endif %}  
            style="border-radius: {{ section.settings.product_bg_radius }}px; width: 100%; height: 100%; --product-border-color: {{ section.settings.product_border_color }}; --product-border-thickness: {{ section.settings.product_border_thickness | append: "px"}};" 
            class="product-image lazyload blur-up" data-commerce-type="variation-image"> 
        {% if settings.enable_product_hover %}
          {% if item.media[1].preview_image != null and item.media[1].media_type != 'video' and item.media[1].media_type != 'external_video' %}
          <img 
            width="390px"
            height="390px"
            {% if settings.enable_lazy_loading %}
            src="{{ item.media[1].preview_image | img_url: '50x' }}"
            data-sizes="auto"
            data-srcset="
            {{ item.media[1].preview_image | img_url: '325x' }} 325w,
    		{{ item.media[1].preview_image | img_url: '400x' }} 400w,
            {{ item.media[1].preview_image | img_url: '500x' }} 500w,
            {{ item.media[1].preview_image | img_url: '600x' }} 600w,
            {{ item.media[1].preview_image | img_url: '700x' }} 700w,
    		{{ item.media[1].preview_image | img_url: '1024x' }} 1524w"
            {% else %}
            src="{{ item.media[1].preview_image | img_url: 'master' }}" alt="{{ item.media[1].preview_image.alt }}"
            {% endif %}  
            style="border-radius: {{ section.settings.product_bg_radius }}px; position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; --product-border-color: {{ section.settings.product_border_color }}; --product-border-thickness: {{ section.settings.product_border_thickness | append: "px"}};" 
            class="product-image-hover lazyload blur-up" data-commerce-type="variation-image" >
          {% endif %}
        {% endif %}
    </a>
  
  {%- if section.settings.show-title -%}
    <div style="color: {{ section.settings.product_title_color }}; font-size:{{ section.settings.product_title_size }}px" class="prouduct-title">{{ item.title }}</div>
  {%- endif -%}

  {%- if section.settings.show_price -%}    
    <div style="color: {{ section.settings.product_price_color }}; font-size:{{ section.settings.product_price_size }}px; text-align: center;" class="collection-product-price prouduct-title">
    {% if section.settings.currency_format == "with_currency" %}  
      {{ item.price | money_with_currency }}
    {% endif %}
    {% if section.settings.currency_format == "without_currency" %}
      {{ item.price | money }}
      {% endif %} 
    </div>
    {% if section.settings.show_compare_price and item.compare_at_price > item.price %}
      <div style="--mobile-product-collection-compare-price-color: {{ section.settings.compare_price_color }}; color: {{ section.settings.compare_price_color }}; font-size:{{ section.settings.compare_price_size }}px; text-decoration: line-through; text-align: center;" class="collection-product-compare-price">
        {% if section.settings.currency_format == "with_currency" %}
          {{ item.compare_at_price | money_with_currency }}
        {% endif %}
        {% if section.settings.currency_format == "without_currency" %}
          {{ item.compare_at_price | money }}
        {% endif %}
      </div>
    {% endif %}
  {%- endif -%}

  {% if item.available %}
  {%- if section.settings.show_preorder and item.metafields.custom.preorder -%}
    {% assign labelHeight = section.settings.on_sale_size | minus: 40 %}
    {% assign labelHeightMobile = section.settings.on_sale_size_mobile | minus: 35 %}
    <div class="preorder-label" style="
      width: fit-content;
      --preorder-label-width-desk: {{ section.settings.on_sale_size | append: 'px' }}; 
      --preorder-label-height-desk: {{ labelHeight | append: 'px' }};
      --preorder-label-width-mobile: {{ section.settings.on_sale_size_mobile | append: 'px' }};
      --preorder-label-height-mobile: {{ labelHeightMobile | append: 'px' }};
      background-color: {{ section.settings.preorder_bg_color }};">
      <div class="text-block-22" style="padding: 0 3px; --on-sale-label-txt-size-desktop: {{ section.settings.on_sale_text_size | append: 'px' }}; color: {{ section.settings.preorder_text_color }}">{{ 'preorder' | t }}</div>
    </div>
  {%- elsif section.settings.show_on_sale -%} 
    {%- if item.compare_at_price and item.compare_at_price > 0 -%}
      {% assign labelHeight = section.settings.on_sale_size | minus: 40 %}
      {% assign labelHeightMobile = section.settings.on_sale_size_mobile | minus: 35 %}
      <div class="on-sale" style="
        width: fit-content;
        --on-sale-label-width-desk: {{ section.settings.on_sale_size | append: 'px' }}; 
        --on-sale-label-height-desk: {{ labelHeight | append: 'px' }};
        --on-sale-label-width-mobile: {{ section.settings.on_sale_size_mobile | append: 'px' }};
        --on-sale-label-height-mobile: {{ labelHeightMobile | append: 'px' }};
        background-color: {{ section.settings.on_sale_bg_color }};">
        <div class="text-block-22" style="padding: 0 3px; --on-sale-label-txt-size-desktop: {{ section.settings.on_sale_text_size | append: 'px' }}; color: {{ section.settings.on_sale_text_color }}">{{ 'collection.on_sale' | t }}</div>
      </div>
    {%- endif -%}
  {%- endif -%}
  {% endif %}

  {% if section.settings.show_oos %}
  {%- if item.available == false -%}
    {% assign labelHeight = section.settings.on_sale_size | minus: 40 %}
              {% assign labelHeightMobile = section.settings.on_sale_size_mobile | minus: 35 %}
              <div class="out-of-stock-label" style=
                "
                width: fit-content;
                --oos-label-width-desk: {{ section.settings.on_sale_size | append: "px" }}; 
                 --oos-label-height-desk: {{ labelHeight | append: "px" }};
                 --oos-label-width-mobile: {{ section.settings.on_sale_size_mobile | append: "px" }};
                 --oos-label-height-mobile: {{ labelHeightMobile | append: "px" }};
                    background-color: {{ section.settings.oos_bg_color }};">
                <div class="text-block-22" style="padding: 0 3px; --on-sale-label-txt-size-desktop: {{ section.settings.on_sale_text_size | append: "px" }}; color: {{ section.settings.oos_text_color }}">{{ 'collection.sold_out' | t }}</div>
              </div>
  {%- endif -%}
  {% endif %}

</div>
{%- endfor -%}

{% comment %} Store pagination data for later use {% endcomment %}
{% assign current_page = paginate.current_page %}
{% assign collection_handle = collection.handle %}
{% assign has_next_page = paginate.next %}
{% assign has_previous_page = paginate.previous %}
{% assign paginate_parts = paginate.parts %}
{% assign previous_url = paginate.previous.url %}
{% assign next_url = paginate.next.url %}

{% endpaginate %}
{% endcapture %}
        {% assign items_length = listItems | strip | size %}

        {{ 'search-box.css' | asset_url | stylesheet_tag }}
        <div class="sb-parent">
          <div
            id="search-box-container"
            class="search-box-container"
            style="
              {% if section.settings.enable_search_box_shadow %} box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25) {% else %}{% endif %};
              {% if section.settings.enable_search_box_radius %} border-radius: 14px{% else %} border-radius: 0 {% endif %};
              --search-box-color: {{ section.settings.search_box_bg_color | color_modify: 'alpha', section.settings.search_box_opacity }};
              --search-box-results-txt-color: {{ section.settings.search_result_txt_color }};
              --search-box-results-line-color: {{ section.settings.search_result_line_color }};
              --search-cancel-button-color: {{ section.settings.search_cancel_button_color }};
            "
          >
            <div class="search-cancel-button" id="search-cancel-button">✕</div>

            <predictive-search>
              <form
                action="/search"
                method="get"
                role="search"
                style="display:flex; flex-direction: column; align-items: center;"
              >
                <input
                  class="search-box search-box-input"
                  id="Search"
                  name="q"
                  value="{{ search.terms | escape }}"
                  type="search"
                  placeholder="SEARCH"
                  role="combobox"
                  aria-expanded="false"
                  aria-owns="predictive-search-results"
                  aria-controls="predictive-search-results"
                  aria-haspopup="listbox"
                  aria-autocomplete="list"
                  style="
                    {% if section.settings.enable_search_input_radius %} border-radius: 7px; {% endif %};
                    color: {{ section.settings.search_box_input_txt_color }};
                    background-color: {{ section.settings.search_box_input_bg_color }};
                    --search-input-placeholder-color: {{ section.settings.search_box_input_txt_color }};
                  "
                >
                <input type="hidden" name="type" value="product">
                <div id="predictive-search" tabindex="-1"></div>
              </form>
            </predictive-search>
          </div>
        </div>

        <div
          style="margin-bottom: 30px; height: auto; max-width: 100%; text-align: {{ section.settings.search_icon_alignment }}; padding-right: 0; left: 0;"
          class="collection-list-wrapper "
        >
          <div
            style="
              display: flex; {% if section.settings.refine_button_position == 'left' %} justify-content: start; {% elsif section.settings.refine_button_position == 'center' %} justify-content: center; {% else %} justify-content: end; {% endif %}
              {% if section.settings.swap_refine_buttons %} flex-direction: row-reverse; {% endif %}
            "
          >
            {% if section.settings.show_search_icon %}
              <svg
                id="search-icon"
                class="search-icon"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                style=""
              >
                <path d="M23.8348 22.5739L17.7882 16.5273C17.6804 16.4195 17.5398 16.3633 17.3898 16.3633H16.907C18.5147 14.6243 19.499 12.3041 19.499 9.74952C19.499 4.36385 15.1352 0 9.74952 0C4.36385 0 0 4.36385 0 9.74952C0 15.1352 4.36385 19.499 9.74952 19.499C12.3041 19.499 14.6243 18.5147 16.3633 16.9117V17.3898C16.3633 17.5398 16.4242 17.6804 16.5273 17.7882L22.5739 23.8348C22.7942 24.0551 23.1504 24.0551 23.3707 23.8348L23.8348 23.3707C24.0551 23.1504 24.0551 22.7942 23.8348 22.5739ZM9.74952 17.9991C5.18881 17.9991 1.49993 14.3102 1.49993 9.74952C1.49993 5.18881 5.18881 1.49993 9.74952 1.49993C14.3102 1.49993 17.9991 5.18881 17.9991 9.74952C17.9991 14.3102 14.3102 17.9991 9.74952 17.9991Z" fill="{{ section.settings.search_icon_color }}"></path>
              </svg>
            {% endif %}
            {% render 'sort-menu' %}
          </div>

          {%- unless items_length == 0 -%}
            <div
              style="
                --mobile-grid-template-columns:{{settings.mobile-layout }}; --mobile-grid-row-gap:{{ settings.row-gap-mobile }}px; --mobile-grid-column-gap:{{ settings.column-gap-mobile }}px;
                --desktop-grid-template-columns:{{settings.desktop-layout }}; --desktop-grid-row-gap:{{ settings.row-gap-desktop }}px; --desktop-grid-column-gap:{{ settings.column-gap-desktop }}px;
                padding: 0px 16px;
                position: relative;
              "
              role="list"
              class="collection-list w-dyn-items desktop"
            >
              {{ listItems }}
            </div>

            {% comment %} Pagination container - moved outside of product grid {% endcomment %}
            <div class="pagination-container" style="margin-top: 40px; text-align: center;">
              {% if section.settings.pagination_type == 'infinite_scroll' and has_next_page %}
                <div id="loading-spinner" style="display: none; text-align: center; padding: 20px;">
                  <div
                    style="width: 40px; height: 40px; border: 3px solid #f3f3f3; border-top: 3px solid #3498db; border-radius: 50%; margin: 0 auto; animation: spin 1s linear infinite;"
                  ></div>
                </div>
                <div
                  id="pagination-url"
                  data-current-page="{{ current_page }}"
                  data-collection-handle="{{ collection_handle }}"
                ></div>
              {% elsif section.settings.pagination_type == 'pagination' %}
                <div
                  class="pagination-items"
                  style="display: flex; justify-content: center; align-items: center; flex-wrap: wrap; gap: 5px; max-width: 100%; padding: 0 10px;"
                >
                  <script>
                    // Create a function to generate pagination URLs that preserve all parameters
                    function generatePaginationUrl(pageNumber) {
                      const urlParams = new URLSearchParams(window.location.search);
                      urlParams.set('page', pageNumber);
                      return '{{ collection.url }}?' + urlParams.toString();
                    }
                  </script>

                  {% comment %} Previous page link {% endcomment %}
                  {% if has_previous_page %}
                    {% assign prev_page_number = current_page | minus: 1 %}
                    <a
                      href="#"
                      onclick="window.location.href = generatePaginationUrl('{{ prev_page_number }}'); return false;"
                      class="pagination-item pagination-prev"
                      style="padding: 5px 8px; color: {{ section.settings.pagination_arrow_color }}; text-decoration: none; min-width: 30px;"
                    >
                      &larr;
                    </a>
                  {% else %}
                    <span
                      class="pagination-item pagination-prev disabled"
                      style="padding: 5px 8px; color: {{ section.settings.pagination_arrow_color | color_modify: 'alpha', 0.5 }}; text-decoration: none; min-width: 30px;"
                    >
                      &larr;
                    </span>
                  {% endif %}

                  {% comment %} Page number links {% endcomment %}
                  {% for part in paginate_parts %}
                    {% if part.is_link %}
                      {% assign page_number = part.title | strip %}
                      <a
                        href="#"
                        onclick="window.location.href = generatePaginationUrl('{{ page_number }}'); return false;"
                        class="pagination-item"
                        style="padding: 5px 8px; color: {{ section.settings.pagination_text_color }}; text-decoration: none; min-width: 30px;"
                      >
                        {{ part.title }}
                      </a>
                    {% else %}
                      <span
                        class="pagination-item active"
                        style="padding: 5px 8px; color: {{ section.settings.pagination_active_text_color }}; background-color: {{ section.settings.pagination_active_color }}; border-radius: 4px; min-width: 30px;"
                      >
                        {{ part.title }}
                      </span>
                    {% endif %}
                  {% endfor %}

                  {% comment %} Next page link {% endcomment %}
                  {% if has_next_page %}
                    {% assign next_page_number = current_page | plus: 1 %}
                    <a
                      href="#"
                      onclick="window.location.href = generatePaginationUrl('{{ next_page_number }}'); return false;"
                      class="pagination-item pagination-next"
                      style="padding: 5px 8px; color: {{ section.settings.pagination_arrow_color }}; text-decoration: none; min-width: 30px;"
                    >
                      &rarr;
                    </a>
                  {% else %}
                    <span
                      class="pagination-item pagination-next disabled"
                      style="padding: 5px 8px; color: {{ section.settings.pagination_arrow_color | color_modify: 'alpha', 0.5 }}; text-decoration: none; min-width: 30px;"
                    >
                      &rarr;
                    </span>
                  {% endif %}
                </div>
              {% endif %}
            </div>
          {%- endunless -%}
          {%- if items_length == 0 -%}
            <div class="empty-state-4 w-dyn-empty"></div>
          {%- endif -%}
        </div>

      {%- else -%}
        {% capture listItems %}
{% paginate collections.all.products by 24 %}
{%- for item in collections.all.products -%}
  <div style="width: {{ settings.product-size }}%; display: flex; flex-direction: column; align-items: center;" role="listitem" class="collection-item w-dyn-item">
    <a href="{{ item.url | within: collection }}" class="link-block-2 w-inline-block collection-product-container {% if settings.product_aspect_ratio != 'natural' %}aspect-ratio-container aspect-ratio-{{ settings.product_aspect_ratio | replace: ':', '-' }}{% endif %}" style="width:100%; {% if settings.product_aspect_ratio == 'natural' %}height:auto;{% else %}height:0;{% endif %} border-radius: {{ section.settings.product_bg_radius }}px; position: relative;">
      <img 
            width="390px"
            height="390px"
            {% if settings.enable_lazy_loading %}
            src="{{ item.featured_media.preview_image | img_url: '50x' }}"
            data-sizes="auto"
            data-srcset="
            {{ item.featured_media.preview_image | img_url: '325x' }} 325w,
    		{{ item.featured_media.preview_image | img_url: '400x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '500x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '600x' }} 500w,
            {{ item.featured_media.preview_image | img_url: '700x' }} 500w,
    		{{ item.featured_media.preview_image | img_url: '1024x' }} 1524w"
            {% else %} 
            src="{{ item.featured_image | img_url: 'master' }}" alt="{{ item.featured_image.alt }}" 
            {% endif %}  
            style="border-radius: {{ section.settings.product_bg_radius }}px; width: 100%; height: 100%; --product-border-color: {{ section.settings.product_border_color }}; --product-border-thickness: {{ section.settings.product_border_thickness | append: "px"}};" 
            class="product-image lazyload blur-up" data-commerce-type="variation-image">
        {% if settings.enable_product_hover %}
          {% if item.media[1].preview_image != null and item.media[1].media_type != 'video' and item.media[1].media_type != 'external_video' %}
          <img 
            width="390px"
            height="390px"
            {% if settings.enable_lazy_loading %}
            src="{{ item.media[1].preview_image | img_url: '50x' }}"
            data-sizes="auto"
            data-srcset="
            {{ item.media[1].preview_image | img_url: '325x' }} 325w,
    		{{ item.media[1].preview_image | img_url: '400x' }} 400w,
            {{ item.media[1].preview_image | img_url: '500x' }} 500w,
            {{ item.media[1].preview_image | img_url: '600x' }} 600w,
            {{ item.media[1].preview_image | img_url: '700x' }} 700w,
    		{{ item.media[1].preview_image | img_url: '1024x' }} 1524w"
            {% else %}
            src="{{ item.media[1].preview_image | img_url: 'master' }}" alt="{{ item.media[1].preview_image.alt }}"
            {% endif %}  
            style="border-radius: {{ section.settings.product_bg_radius }}px; position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; --product-border-color: {{ section.settings.product_border_color }}; --product-border-thickness: {{ section.settings.product_border_thickness | append: "px"}};" 
            class="product-image-hover lazyload blur-up" data-commerce-type="variation-image" >
          {% endif %}
        {% endif %}
    </a>
    {%- if section.settings.show-title -%}
      <div style="color: {{ section.settings.product_title_color }}; font-size:{{ section.settings.product_title_size }}px;" class="prouduct-title">{{ item.title }}</div>
    {%- endif -%}
    
    {%- if section.settings.show_price -%}    
      <div style="color: {{ section.settings.product_price_color }}; font-size:{{ section.settings.product_price_size }}px; text-align: center;" class="collection-product-price prouduct-title">
      {% if section.settings.currency_format == "with_currency" %}  
        {{ item.price | money_with_currency }}
      {% endif %}
      {% if section.settings.currency_format == "without_currency" %}
        {{ item.price | money }}
        {% endif %} 
      </div>
      {% if section.settings.show_compare_price and item.compare_at_price > item.price %}
        <div style="color: {{ section.settings.compare_price_color }}; font-size:{{ section.settings.compare_price_size }}px; text-decoration: line-through; text-align: center;" class="collection-product-compare-price">
          {% if section.settings.currency_format == "with_currency" %}
            {{ item.compare_at_price | money_with_currency }}
          {% endif %}
          {% if section.settings.currency_format == "without_currency" %}
            {{ item.compare_at_price | money }}
          {% endif %}
        </div>
      {% endif %}
    {%- endif -%}
  </div>
{%- endfor -%}
{% if paginate.next %}
  <div style="position: absolute; left: 50%; transform: translateX(-50%); bottom: -60px; width: auto;">
    <div id="loading-spinner" style="display: none; text-align: center; padding: 20px;">
        <div style="width: 40px; height: 40px; border: 3px solid #f3f3f3; border-top: 3px solid #3498db; border-radius: 50%; margin: 0 auto; animation: spin 1s linear infinite;"></div>
    </div>
    <div id="pagination-url" 
         data-current-page="{{ paginate.current_page }}" 
         data-collection-handle="{{ collection.handle }}">
    </div>
  </div>
{% endif %}

{% endpaginate %}
{% endcapture %}

        {% assign items_length = listItems | strip | size %}

        <div
          style="height: auto; max-width: 100%; text-align: center; padding-right:{{ settings.scrollbar-distance | append:"px" }}; left:{{ settings.scrollbar-distance | append:"px" }};"
          class="collection-list-wrapper w-dyn-list"
          udy-collection="product"
        >
          {%- unless items_length == 0 -%}
            <div
              style=" grid-template-columns:{{settings.desktop-layout }}; grid-row-gap:{{ settings.row-gap-desktop }}px; grid-column-gap:{{ settings.column-gap-desktop }}px;"
              role="list"
              class="collection-list w-dyn-items desktop"
            >
              {{ listItems }}
            </div>

            <div
              style=" grid-template-columns:{{settings.mobile-layout }}; grid-row-gap:{{ settings.row-gap-mobile }}px; grid-column-gap:{{ settings.column-gap-mobile }}px;"
              role="list"
              class="collection-list w-dyn-items mobile"
            >
              {{ listItems }}
            </div>
          {%- endunless -%}
          {%- if items_length == 0 -%}
            <div class="empty-state-3 w-dyn-empty">
              <div>
                No items yet.<br>
                <br>
                Follow us for the latest release dates
              </div>
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}

      <script defer src="{{ 'collection-product-hover.js' | asset_url }}" type="text/javascript"></script>
    </div>

    {% comment %}DROPDOWN MENU FOR CLASSIC{% endcomment %}
    <div
      style="
        margin-top: 62px;
        word-wrap: break-word;
        width: 111px;

        {% if section.settings.fix_desktop_menu %}
        position: fixed;
        {% else %}
        position:absolute;
        {% endif %}
        /* RIGHT AND NOT FIXED */
        {% if section.settings.reverse_desktop_menu == "right" and section.settings.fix_desktop_menu == false %}
        right: -100px;
        /* LEFT, FIXED, END */
        {% elsif section.settings.fix_desktop_menu == true and section.settings.reverse_desktop_menu == "left" %}
        left: 26px;
        /* RIGHT, FIXED, END */
        {% elsif section.settings.fix_desktop_menu == true and section.settings.reverse_desktop_menu == "right" %}
        right: 48px;
        {% elsif section.settings.fix_desktop_menu == false %}
        left: -122px;
        {% endif %}
      "
      class="collection-list-wrapper-5 w-dyn-list desktop-menu"
      udy-collection="collection"
    >
      <div class="side-nav">
        <ul class="nav-list">
          {% for link in section.settings.collection_menu.links %}
            {% if link.links.size > 0 %}
              {% assign is_child_active = false %}
              {% assign is_sub_child_active = false %}

              {% for child_link in link.links %}
                {% if child_link.url == collection.url %}
                  {% assign is_child_active = true %}
                {% endif %}

                {% for sub_child_link in child_link.links %}
                  {% if sub_child_link.url == collection.url %}
                    {% assign is_child_active = true %}
                    {% assign is_sub_child_active = true %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
              <li class="nav-item">
                <div
                  style="
                            display:flex;
                            justify-content:{{ section.settings.text-alignment }};
                    {% if section.settings.text-alignment == 'end' %}
                            text-align: right;
                    {% elsif section.settings.text-alignment == 'start' %}
                            text-align: left;
                    {% else %}
                            text-align: center;
                    {% endif %}
                  "
                >
                  <a
                    style="
                      white-space: {{ section.settings.whitespace }};
                      font-size:{{ section.settings.font-size }}px;
                      color:{{ section.settings.menu-link-color }};
                      margin-top: {{ section.settings.menu-spacing }}px;
                    "
                    href="#"
                    class="{% if is_child_active or is_sub_child_active %}active{% endif %} nav-link-collection"
                  >
                    <p style="width: fit-content; margin: 0; word-break: break-word;">{{ link.title }}</p>
                    <svg
                      class="pushy-arrow"
                      width="6"
                      height="10"
                      viewBox="0 0 6 10"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path d="M1 1L5 5L1 9" stroke="{{ section.settings.navlink_arrow_color }}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </a>
                </div>
                <ul class="dropdown">
                  {% for child_link in link.links %}
                    {% if child_link.links.size > 0 %}
                      <li class="nav-item">
                        <div
                          style="
                                    display:flex;
                                    justify-content: {{ section.settings.text-alignment }};
                            {% if section.settings.text-alignment == 'end' %}
                                    text-align: right;
                            {% elsif section.settings.text-alignment == 'start' %}
                                    text-align: left;
                            {% else %}
                                    text-align: center;
                            {% endif %}
                          "
                        >
                          <a
                            style="
                              {% if settings.disable_highlight_animation %}
                                      animation-duration: 0s;
                              {% endif %}
                                      white-space: {{ section.settings.whitespace }};
                                      font-size:{{ section.settings.font-size }}px;
                                      color:{{ section.settings.menu-link-color }};
                                      margin-top: {{ section.settings.menu_spacing_child }}px;
                            "
                            href="#"
                            class="{% if is_sub_child_active %}active{% endif %} nav-link-collection"
                          >
                            <p style="width: fit-content; margin: 0; word-break: break-word;">{{ child_link.title }}</p>
                            <svg
                              class="pushy-arrow"
                              width="6"
                              height="10"
                              viewBox="0 0 6 10"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path d="M1 1L5 5L1 9" stroke="{{ section.settings.navlink_arrow_color }}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                          </a>
                        </div>
                        <ul class="sub-dropdown">
                          {% for sub_child_link in child_link.links %}
                            <li class="sub-dropdown-item">
                              <div
                                style="
                                          display:flex;
                                          justify-content: {{ section.settings.text-alignment }};
                                  {% if section.settings.text-alignment == 'end' %}
                                          text-align: right;
                                  {% elsif section.settings.text-alignment == 'start' %}
                                          text-align: left;
                                  {% else %}
                                          text-align: center;
                                  {% endif %}
                                "
                              >
                                <a
                                  style="
                                    {% if sub_child_link.url == collection.url %}
                                            color: {{ section.settings.navlink_hover_color }};
                                            background-color: {{ section.settings.navlink_background_color }};
                                    {% endif %}
                                    {% if settings.disable_highlight_animation %}
                                            animation-duration: 0s;
                                    {% endif %}
                                            white-space: {{ section.settings.whitespace }};
                                            font-size:{{ section.settings.font-size }}px;
                                            --nav-link-color:{{ section.settings.menu-link-color }};
                                            --navlink-background-color: {{ section.settings.navlink_background_color }};
                                            --navlink-hover-color: {{ section.settings.navlink_hover_color }};
                                            margin-top: {{ section.settings.menu_spacing_subchild }}px;
                                  "
                                  href="{{ sub_child_link.url }}"
                                  class="nav-link-collection"
                                >
                                  <p style="width: fit-content; margin: 0; word-break: break-word;">
                                    {{ sub_child_link.title }}
                                  </p>
                                </a>
                              </div>
                            </li>
                          {% endfor %}
                        </ul>
                      </li>
                    {% else %}
                      <li class="dropdown-item">
                        <div
                          style="
                                    display:flex;
                                    justify-content: {{ section.settings.text-alignment }};
                            {% if section.settings.text-alignment == 'end' %}
                                    text-align: right;
                            {% elsif section.settings.text-alignment == 'start' %}
                                    text-align: left;
                            {% else %}
                                    text-align: center;
                            {% endif %}
                          "
                        >
                          <a
                            style="
                              {% if child_link.url == collection.url %}
                                      color: {{ section.settings.navlink_hover_color }};
                                      background-color: {{ section.settings.navlink_background_color }};
                              {% endif %}
                              {% if settings.disable_highlight_animation %}
                                      animation-duration: 0s;
                              {% endif %}
                                      white-space: {{ section.settings.whitespace }};
                                      font-size:{{ section.settings.font-size }}px;
                                      --nav-link-color:{{ section.settings.menu-link-color }};
                                      --navlink-background-color: {{ section.settings.navlink_background_color }};
                                      --navlink-hover-color: {{ section.settings.navlink_hover_color }};
                                      margin-top: {{ section.settings.menu_spacing_child }}px;
                            "
                            href="{{ child_link.url }}"
                            class="nav-link-collection"
                          >
                            <p style="width: fit-content; margin: 0; word-break: break-word;">
                              {{ child_link.title }}
                            </p>
                          </a>
                        </div>
                      </li>
                    {% endif %}
                  {% endfor %}
                </ul>
              </li>
            {% else %}
              <li class="nav-item">
                <div
                  style="
                            display:flex;
                            justify-content: {{ section.settings.text-alignment }};
                    {% if section.settings.text-alignment == 'end' %}
                            text-align: right;
                    {% elsif section.settings.text-alignment == 'start' %}
                            text-align: left;
                    {% else %}
                            text-align: center;
                    {% endif %}
                  "
                >
                  <a
                    style="
                      {% if link.url == collection.url %}
                              color: {{ section.settings.navlink_hover_color }};
                              background-color: {{ section.settings.navlink_background_color }};
                      {% endif %}
                      {% if settings.disable_highlight_animation %}
                              animation-duration: 0s;
                      {% endif %}
                              white-space: {{ section.settings.whitespace }};
                              font-size:{{ section.settings.font-size }}px;
                              --nav-link-color:{{ section.settings.menu-link-color }};
                              --navlink-background-color: {{ section.settings.navlink_background_color }};
                              --navlink-hover-color: {{ section.settings.navlink_hover_color }};
                              margin-top: {{ section.settings.menu-spacing }}px;
                    "
                    href="{{ link.url }}"
                    class="nav-link-collection"
                  >
                    <p style="width: fit-content; margin: 0; word-break: break-word;">
                      {{ link.title }}
                    </p>
                  </a>
                </div>
              </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    </div>

    <script>
      var currentSection = document.currentScript.closest('.shopify-section');
    </script>
  </div>

  <div class="right w-col w-col-2 w-col-stack desktop"></div>
</div>

<script
  src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=63f81962926b3cf73bfbfcee"
  type="text/javascript"
  integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
  crossorigin="anonymous"
></script>
<script src="{{ 'collection-dropdown-menu.js' | asset_url }}" type="text/javascript"></script>
<script src="{{ 'plain-jane.js' | asset_url }}" type="text/javascript"></script>
<script src="{{ 'lazyloadz.js' | asset_url }}" type="text/javascript"></script>
{{ 'udesly-shopify.min.js' | asset_url | script_tag }}
{% if section.settings.show_search_icon %}
  <script src="{{ 'predictive-search.js' | asset_url }}" type="text/javascript"></script>
{% endif %}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Product animation observer - works for both pagination types
        const productObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
                if (entry.isIntersecting) {
                    setTimeout(() => {
                        entry.target.classList.add('fade-in');
                    }, index * 50);
                    productObserver.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.1
        });

        function observeProducts() {
            document.querySelectorAll('.collection-item').forEach(product => {
                productObserver.observe(product);
            });
        }

        // Initialize product animations for all products
        observeProducts();

        // Only initialize infinite scroll if that option is selected
        const paginationType = '{{ section.settings.pagination_type }}';
        
        if (paginationType === 'infinite_scroll') {
            const cleanup = initializeInfiniteScroll();
            window.infiniteScrollCleanup = cleanup;
        }

        function initializeInfiniteScroll() {
            let loading = false;
            let productGrid = document.querySelector('.collection-list.w-dyn-items.desktop');
            let loadingSpinner = document.getElementById('loading-spinner');
            let paginationUrl = document.getElementById('pagination-url');
            
            // If pagination elements don't exist, don't initialize
            if (!paginationUrl) return function() {};
            
            // Show the loading spinner when loading
            if (loadingSpinner) {
                loadingSpinner.style.display = 'none';
            }

            // Track if we're at the end of all pages
            let reachedEnd = false;

            function loadMoreProducts() {
                if (loading || !paginationUrl || reachedEnd) return;
                
                const currentPage = parseInt(paginationUrl.dataset.currentPage);
                const collectionHandle = paginationUrl.dataset.collectionHandle;
                const nextPage = currentPage + 1;
                
                console.log(`Loading page ${nextPage} for collection ${collectionHandle}`);
                
                // Show loading spinner
                if (loadingSpinner) {
                    loadingSpinner.style.display = 'block';
                }
                
                // Get current URL parameters
                const urlParams = new URLSearchParams(window.location.search);
                urlParams.set('page', nextPage);
                
                // Construct URL maintaining existing parameters
                const nextUrl = `/collections/${collectionHandle}?${urlParams.toString()}`;
                console.log(`Fetching URL: ${nextUrl}`);

                loading = true;

                fetch(nextUrl)
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const newProducts = doc.querySelectorAll('.collection-item');
                        
                        if (newProducts.length > 0) {
                            newProducts.forEach(product => {
                                const clonedProduct = product.cloneNode(true);
                                productGrid.appendChild(clonedProduct);
                                productObserver.observe(clonedProduct);
                            });
                            
                            // Update the current page in the dataset
                            console.log(`Setting pagination current page to ${nextPage}`);
                            paginationUrl.dataset.currentPage = nextPage;
                            
                            // Reinitialize product hover for newly loaded products
                            if (typeof initializeProductHover === 'function') {
                                console.log('Reinitializing product hover for new products');
                                initializeProductHover();
                            }
                            
                            // Check if there's a next page in the fetched HTML
                            const nextPageElement = doc.querySelector('#pagination-url');
                            console.log('Next page element found in fetched HTML:', nextPageElement);
                            
                            if (!nextPageElement) {
                                console.log('No more pages detected');
                                reachedEnd = true;
                                if (loadingSpinner) loadingSpinner.remove();
                            } else {
                                // Keep the collection handle from the fetched element if available
                                if (nextPageElement.dataset.collectionHandle) {
                                    paginationUrl.dataset.collectionHandle = nextPageElement.dataset.collectionHandle;
                                }
                                
                                // Immediately start preloading the next page when we're 75% through the current page
                                setupPreloadTrigger();
                                
                                // Check if we need to preload the next page immediately
                                checkIfShouldPreloadNext();
                            }
                        } else {
                            console.log('No products found on next page');
                            reachedEnd = true;
                            if (loadingSpinner) loadingSpinner.remove();
                        }
                    })
                    .catch(error => {
                        console.error('Error loading more products:', error);
                    })
                    .finally(() => {
                        // Ensure loading state is reset regardless of success or failure
                        console.log('Resetting loading state');
                        loading = false;
                        if (loadingSpinner) {
                            loadingSpinner.style.display = 'none';
                        }
                    });
            }
            
            // Setup multiple trigger points throughout the page
            function setupPreloadTrigger() {
                // Create trigger elements at various points in the content
                const allProducts = document.querySelectorAll('.collection-item');
                if (allProducts.length === 0) return;
                
                // Create more trigger points to catch fast scrolling
                // Use percentages throughout the entire product list
                const percentages = [0.25, 0.4, 0.5, 0.6, 0.75, 0.85, 0.95];
                
                const triggerIndices = percentages
                    .map(percentage => Math.floor(allProducts.length * percentage))
                    .filter((value, index, self) => self.indexOf(value) === index) // Remove duplicates
                    .filter(index => index >= 0 && index < allProducts.length);
                
                if (triggerIndices.length === 0) return;
                
                // Create or reuse the preload observer
                if (window.preloadNextPageObserver) {
                    window.preloadNextPageObserver.disconnect();
                }
                
                window.preloadNextPageObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting && !loading && !reachedEnd) {
                            console.log('Preload trigger reached, loading next page');
                            loadMoreProducts();
                            // Don't unobserve - keep all triggers active to catch fast scrolling
                        }
                    });
                }, {
                    root: null,
                    rootMargin: '300px', // Much larger margin to detect earlier
                    threshold: 0.01 // Very small threshold to trigger as soon as any part is visible
                });
                
                // Observe multiple trigger points
                triggerIndices.forEach(index => {
                    if (index < allProducts.length) {
                        const triggerProduct = allProducts[index];
                        window.preloadNextPageObserver.observe(triggerProduct);
                        console.log(`Set up preload trigger at product index ${index}`);
                    }
                });
                
                // Also add a trigger at the bottom of the page
                const bottomTrigger = document.createElement('div');
                bottomTrigger.id = 'bottom-trigger';
                bottomTrigger.style.height = '1px';
                bottomTrigger.style.width = '100%';
                bottomTrigger.style.position = 'absolute';
                bottomTrigger.style.bottom = '1000px'; // 1000px from the bottom
                document.body.appendChild(bottomTrigger);
                window.preloadNextPageObserver.observe(bottomTrigger);
                console.log('Added bottom trigger element');
            }
            
            // Improved debounce function with immediate option
            function debounce(func, wait, immediate = false) {
                let timeout;
                return function() {
                    const context = this;
                    const args = arguments;
                    const later = function() {
                        timeout = null;
                        if (!immediate) func.apply(context, args);
                    };
                    const callNow = immediate && !timeout;
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                    if (callNow) func.apply(context, args);
                };
            }
            
            // Improved throttle function
            function throttle(func, limit) {
                let lastFunc;
                let lastRan;
                return function() {
                    const context = this;
                    const args = arguments;
                    if (!lastRan) {
                        func.apply(context, args);
                        lastRan = Date.now();
                    } else {
                        clearTimeout(lastFunc);
                        lastFunc = setTimeout(function() {
                            if ((Date.now() - lastRan) >= limit) {
                                func.apply(context, args);
                                lastRan = Date.now();
                            }
                        }, limit - (Date.now() - lastRan));
                    }
                };
            };
            
            // Add a scroll event listener with reduced threshold
            const scrollHandler = debounce(() => {
                if (loading || !paginationUrl || reachedEnd) return;
                
                // Check if we're past 40% down the page (reduced threshold)
                const scrollPosition = window.scrollY + window.innerHeight;
                const totalHeight = document.body.scrollHeight;
                const scrollPercentage = scrollPosition / totalHeight;
                
                if (scrollPercentage > 0.4) { // Reduced from 0.5 to 0.4
                    console.log('Scroll event: 40% through page, triggering load');
                    loadMoreProducts();
                }
            }, 50); // Reduced from 100ms to 50ms for faster response
            
            // Enhanced scroll velocity detector for extremely fast scrolling
            let lastScrollTop = 0;
            let lastScrollTime = Date.now();
            let scrollVelocity = 0;
            let consecutiveFastScrolls = 0;
            
            const velocityScrollHandler = () => {
                if (loading || !paginationUrl || reachedEnd) return;
                
                const currentScrollTop = window.scrollY;
                const currentTime = Date.now();
                const timeDelta = currentTime - lastScrollTime;
                
                if (timeDelta > 0) {
                    // Calculate scroll velocity in pixels per millisecond
                    scrollVelocity = Math.abs(currentScrollTop - lastScrollTop) / timeDelta;
                    
                    // Get scroll position as percentage of page
                    const scrollPercentage = (window.scrollY + window.innerHeight) / document.body.scrollHeight;
                    
                    // If scrolling very fast (more than 2 pixels per millisecond) and we're past 20% of the page
                    if (scrollVelocity > 2 && scrollPercentage > 0.2) {
                        consecutiveFastScrolls++;
                        console.log(`Fast scroll detected! Velocity: ${scrollVelocity.toFixed(2)}px/ms, Position: ${(scrollPercentage * 100).toFixed(0)}%, Consecutive: ${consecutiveFastScrolls}`);
                        
                        // If we detect consecutive fast scrolls, it's likely the user is scrolling very quickly
                        if (consecutiveFastScrolls >= 2) {
                            loadMoreProducts();
                            // Reset counter after triggering
                            consecutiveFastScrolls = 0;
                        }
                    } else {
                        // Reset consecutive counter if not scrolling fast
                        if (scrollVelocity < 1) {
                            consecutiveFastScrolls = 0;
                        }
                    }
                }
                
                lastScrollTop = currentScrollTop;
                lastScrollTime = currentTime;
            };
            
            // Check if we should preload the next page based on current scroll position
            function checkIfShouldPreloadNext() {
                if (loading || !paginationUrl || reachedEnd) return;
                
                const scrollPosition = window.scrollY + window.innerHeight;
                const totalHeight = document.body.scrollHeight;
                const scrollPercentage = scrollPosition / totalHeight;
                
                // If we're already more than 70% down the page, load the next page immediately
                if (scrollPercentage > 0.7) {
                    console.log('Already 70% down the page, loading next page immediately');
                    loadMoreProducts();
                }
            }
            
            // Add scroll direction detection
            let scrollDirection = 'down';
            let lastScrollY = window.scrollY;
            
            const scrollDirectionHandler = () => {
                const currentScrollY = window.scrollY;
                
                if (currentScrollY > lastScrollY) {
                    if (scrollDirection !== 'down') {
                        scrollDirection = 'down';
                        console.log('Scroll direction changed to DOWN');
                    }
                } else if (currentScrollY < lastScrollY) {
                    if (scrollDirection !== 'up') {
                        scrollDirection = 'up';
                        console.log('Scroll direction changed to UP');
                    }
                }
                
                lastScrollY = currentScrollY;
                
                // If scrolling down and near bottom, trigger load
                if (scrollDirection === 'down') {
                    const scrollPosition = window.scrollY + window.innerHeight;
                    const totalHeight = document.body.scrollHeight;
                    const remainingScroll = totalHeight - scrollPosition;
                    
                    // If less than 1000px from bottom, load more
                    if (remainingScroll < 1000 && !loading && !reachedEnd) {
                        console.log(`Near bottom (${remainingScroll.toFixed(0)}px remaining), loading next page`);
                        loadMoreProducts();
                    }
                }
            };
            
            // Add all scroll handlers
            window.addEventListener('scroll', scrollHandler);
            window.addEventListener('scroll', velocityScrollHandler, { passive: true });
            window.addEventListener('scroll', throttle(scrollDirectionHandler, 100), { passive: true });
            
            // Add wheel event listener to detect mousewheel/trackpad scrolling
            window.addEventListener('wheel', (event) => {
                if (loading || !paginationUrl || reachedEnd) return;
                
                // If the user is scrolling down rapidly with the wheel
                if (event.deltaY > 50) {
                    const scrollPosition = window.scrollY + window.innerHeight;
                    const totalHeight = document.body.scrollHeight;
                    const scrollPercentage = scrollPosition / totalHeight;
                    
                    // If we're past 30% of the page and scrolling down rapidly
                    if (scrollPercentage > 0.3) {
                        console.log('Rapid wheel scrolling detected, loading next page');
                        loadMoreProducts();
                    }
                }
            }, { passive: true });
            
            // Initial setup to preload the next page
            setupPreloadTrigger();
            
            // Check if we should preload immediately based on current position
            checkIfShouldPreloadNext();
            
            // If there are very few products initially, trigger a load right away
            if (document.querySelectorAll('.collection-item').length < 12) {
                console.log('Few initial products, loading next page immediately');
                loadMoreProducts();
            }
            
            // Observe products for animation
            observeProducts();
            
            // Clean up function for when the component is destroyed or reinitialized
            return function cleanup() {
                if (window.preloadNextPageObserver) {
                    window.preloadNextPageObserver.disconnect();
                }
                window.removeEventListener('scroll', scrollHandler);
                window.removeEventListener('scroll', velocityScrollHandler);
                window.removeEventListener('scroll', scrollDirectionHandler);
                window.removeEventListener('wheel', function(event) {
                    if (loading || !paginationUrl || reachedEnd) return;
                    
                    // If the user is scrolling down rapidly with the wheel
                    if (event.deltaY > 50) {
                        const scrollPosition = window.scrollY + window.innerHeight;
                        const totalHeight = document.body.scrollHeight;
                        const scrollPercentage = scrollPosition / totalHeight;
                        
                        // If we're past 30% of the page and scrolling down rapidly
                        if (scrollPercentage > 0.3) {
                            console.log('Rapid wheel scrolling detected, loading next page');
                            loadMoreProducts();
                        }
                    }
                });
                
                // Remove the bottom trigger if it exists
                const bottomTrigger = document.getElementById('bottom-trigger');
                if (bottomTrigger) {
                    bottomTrigger.remove();
                }
            };
        }

        // Listen for sort updates
        document.addEventListener('collection:sorted', function(event) {
            // Re-observe products for animation
            observeProducts();
            
            // Only reinitialize infinite scroll if that option is selected
            if ('{{ section.settings.pagination_type }}' === 'infinite_scroll') {
                if (window.preloadNextPageObserver) {
                    window.preloadNextPageObserver.disconnect();
                }
                if (window.infiniteScrollCleanup) {
                    window.infiniteScrollCleanup();
                }
                const cleanup = initializeInfiniteScroll();
                window.infiniteScrollCleanup = cleanup;
            }
        });
    });
</script>

{% schema %}
{
  "name": "Classic Collection",
  "blocks": [
  {
    "type": "sort_option",
    "name": "Sort Option",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Option Title",
        "default": "Featured"
      },
      {
        "type": "select",
        "id": "sort_by",
        "label": "Sort by",
        "options": [
          { "value": "manual", "label": "Featured" },
          { "value": "best-selling", "label": "Best Selling" },
          { "value": "title-ascending", "label": "Alphabetically, A-Z" },
          { "value": "title-descending", "label": "Alphabetically, Z-A" },
          { "value": "price-ascending", "label": "Price, low to high" },
          { "value": "price-descending", "label": "Price, high to low" },
          { "value": "created-descending", "label": "Date, new to old" },
          { "value": "created-ascending", "label": "Date, old to new" }
        ],
        "default": "manual"
      }
    ]
  }
],
"presets": [
  {
    "name": "Classic Collection",
    "blocks": [
      {
        "type": "sort_option"
      },
      {
        "type": "sort_option"
      },
      {
        "type": "sort_option"
      },
      {
        "type": "sort_option"
      }
    ]
  }
],
  "disabled_on":{
    "templates": ["404","article","blog", "cart", "product", "list-collections", "customers/account",
      "customers/activate_account","customers/addresses","customers/login","customers/order", "customers/register", "customers/reset_password",
      "gift_card","index","page","password","search"
    ]
  },
  "settings": [
    {
      "type": "link_list",
      "id": "collection_menu",
      "label": "Select A Collection Menu"
    },
  {
    "type": "header",
    "content": "Date & Time"
  },
    {
    "type": "color",
    "id": "index_date_color",
    "label": "Date Color",
    "default": "#000000"
  },
   {
    "type": "color",
    "id": "index_time_color",
    "label": "Time Color",
    "default": "#000000"
  },
  {
    "type": "checkbox",
    "id": "show_date_time",
    "label": "Show Date/Time",
    "default": true
    },
    {
    "type": "header",
    "content": "Cart"
  },
    {
    "type": "color",
    "id": "cart_text_color",
    "label": "Cart Text Color",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "cart_number_color",
    "label": "Cart Quantiy Color",
    "default": "#FFF"
  },
  {
    "type": "color",
    "id": "cart_number_bg_color",
    "label": "Cart Quantity Background Color",
    "default": "#000"
  },
  {
    "type": "header",
    "content": "Collection Menu"
  },
  {
    "type": "select",
    "id": "reverse_desktop_menu",
    "label": "Menu Position",
    "options": [
    {
      "value": "left",
      "label": "Left"
    },
    {
      "value": "right",
      "label": "Right"
    }
  ],
"default": "left"
  },
  {
    "type": "select",
    "id": "text-alignment",
    "label": "Menu Text Alignment",
    "options": [
    {
      "value": "start",
      "label": "Left"
    },
    {
      "value": "center",
      "label": "Center"
    },
    {
      "value": "end",
      "label": "Right"
    }
  ],
"default": "end"
  },
  {
    "type": "range",
    "id": "font-size",
    "min": 10,
    "max": 26,
    "step": 1,
    "unit": "px",
    "label": "Font Size",
    "default": 12
  },
  {
    "type": "range",
    "id": "menu-spacing",
    "min": 0,
    "max": 36,
    "step": 1,
    "unit": "px",
    "label": "Link Vertical Spacing",
    "default": 8
  },
    {
      "type": "range",
      "id": "menu_spacing_child",
      "min": 0,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "2nd Level Link Vertical Spacing",
      "default": 6
    },
    {
      "type": "range",
      "id": "menu_spacing_subchild",
      "min": 0,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "3rd Level Link Vertical Spacing",
      "default": 4
    },
    {
    "type": "paragraph",
    "content": "Menu Colors"
  },
  {
    "type": "color",
    "id": "menu-link-color",
    "label": "Menu Link Colors",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "navlink_background_color",
    "label": "Menu Link Hover Background Colors",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "navlink_hover_color",
    "label": "Menu Link Hover Text Colors",
    "default": "#FFF"
  },
    {
      "type": "color",
      "id": "navlink_arrow_color",
      "label": "Sub Menu Link Arrow Color",
      "default": "#1B1B1B"
    },
    {
    "type": "paragraph",
    "content": "Misc"
  },
  {
    "type": "checkbox",
    "id": "fix_desktop_menu",
    "label": "Make Desktop Menu Fixed",
    "default": false
  },
    {
    "type": "select",
    "id": "whitespace",
    "label": "Enable Line Break On Whitespace",
    "options": [
    {
      "value": "normal",
      "label": "Line Break Between Spaces"
    },
    {
      "value": "nowrap",
      "label": "Don't Break Between Spaces"
    }

  ],
"default": "normal"
  },
    {
    "type": "header",
    "content": "Product Titles"
  },
  {
      "type": "range",
      "id": "product_title_size",
      "label": "Product Title Size",
      "min": 10,
      "max": 21,
      "unit": "px",
      "step": 1,
      "default": 14
  },
  {
    "type": "color",
    "id": "product_title_color",
    "label": "Product Titles",
    "default": "#000000"
  },
 {
    "type": "checkbox",
    "id": "show-title",
    "label": "Show Product Titles",
    "default": false
  },
 {
    "type": "header",
    "content": "Product Prices"
  },
  {
      "type": "range",
      "id": "product_price_size",
      "label": "Product Price Size",
      "min": 10,
      "max": 21,
      "unit": "px",
      "step": 1,
      "default": 12
  },
  {
    "type": "range",
    "id": "compare_price_size",
    "label": "Compare Price Size",
    "min": 10,
    "max": 21,
    "unit": "px",
    "step": 1,
    "default": 12
  },
  {
    "type": "color",
    "id": "product_price_color",
    "label": "Product Price Color",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "compare_price_color",
    "label": "Compare Price Color",
    "default": "#FE0000"
  },
  {
    "type": "radio",
    "id": "currency_format",
    "label": "Currency Format",
    "options": [
      {
        "value": "with_currency",
        "label": "With Currency"
      },
      {
        "value": "without_currency",
        "label": "Without Currency"
      }
    ],
    "default": "without_currency"
  },
  {
    "type": "checkbox",
    "id": "show_price",
    "label": "Show Product Prices",
    "default": false
  },
  {
    "type": "checkbox",
    "id": "show_compare_price",
    "label": "Show Compare Prices",
    "default": true
  },
  {
    "type": "header",
    "content": "Labels"
  },
  {
    "type": "range",
    "id": "on_sale_text_size",
    "label": "Label Font Size",
    "min": 6,
    "max": 20,
    "unit": "px",
    "step": 1,
    "default": 12
  },
  {
    "type": "color",
    "id": "preorder_bg_color",
    "label": "Pre-Order BG",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "preorder_text_color",
    "label": "Pre-Order Text Color",
    "default": "#FFF"
  },
  {
    "type": "color",
    "id": "on_sale_bg_color",
    "label": "On Sale BG",
    "default": "#000000"
  },
  {
    "type": "color",
    "id": "on_sale_text_color",
    "label": "On Sale Text Color",
    "default": "#FFF"
  },
  {
    "type": "color",
    "id": "oos_bg_color",
    "label": "Out Of Stock Label BG",
    "default": "#FF0100"
  },
  {
    "type": "color",
    "id": "oos_text_color",
    "label": "Out Of Stock Text Color",
    "default": "#FFF"
  },
  {
    "type": "checkbox",
    "id": "show_preorder",
    "label": "Show Pre-Order Labels",
    "default": true
  },
  {
    "type": "checkbox",
    "id": "show_on_sale",
    "label": "Show On Sale Labels",
    "default": true
  },
  {
    "type": "checkbox",
    "id": "show_oos",
    "label": "Show Out Of Stock Labels",
    "default": true
  },
  {
    "type": "header",
    "content": "Product Background"
  },
  {
    "type": "range",
      "id": "product_bg_radius",
      "label": "Product Background Radius",
      "min": 0,
      "max": 20,
      "step": 0.5,
      "default": 0,
      "unit": "px"
  },
  {
    "type": "color",
    "id": "product_bg_color",
    "label": "Product Background Color",
    "default": "#fff"
  },
  {
    "type": "checkbox",
    "id": "product_bg_transparent",
    "label": "Make Background Transparent",
    "default": true
  },
  {
    "type": "header",
    "content": "Search & Sort Icons"
  },
  {
    "type": "select",
    "id": "refine_button_position",
    "label": "Icon Position",
    "options": [
      {
        "value": "left",
        "label": "Left"
      },
      {
        "value": "center",
        "label": "Center"
      },
      {
        "value": "right",
        "label": "Right"
      }
    ],
    "default": "right"
  },
  {
      "type": "color",
      "id": "search_icon_color",
      "label": "Search Icon Color",
      "default": "#1B1B1B"
    },
  {
      "type": "color",
      "id": "filter_icon_color",
      "label": "Sort Icon Color",
      "default": "#1B1B1B"
    },
  {
    "type": "checkbox",
    "id": "swap_refine_buttons",
    "label": "Swap Icons",
    "default": false
  },
  {
    "type": "checkbox",
    "id": "show_search_icon",
    "label": "Show Search Icon",
    "default": true
  },
  {
    "type": "checkbox",
    "id": "show_filter_icon",
    "label": "Show Sort Icon",
    "default": true
  },
  {
    "type": "header",
    "content": "Search Bar"
  },
  {
      "type": "range",
      "id": "search_box_opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "unit": "px",
      "label": "Search Box BG Opacity",
      "default": 0.5
    },
    {
      "type": "color",
      "id": "search_box_bg_color",
      "label": "Search Box Bg Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "search_cancel_button_color",
      "label": "Search Cancel Button Color",
      "default": "#b0b0b0"
    },
    {
      "type": "color",
      "id": "search_result_txt_color",
      "label": "Search Results Txt Color",
      "default": "#000"
    },
    {
      "type": "color",
      "id": "search_result_line_color",
      "label": "Search Results Line Color",
      "default": "#000"
    },
    {
      "type": "color",
      "id": "search_box_input_bg_color",
      "label": "Search Box Input Bg Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "search_box_input_txt_color",
      "label": "Search Box Input Txt Color",
      "default": "#000"
    },
    {
      "type": "checkbox",
      "id": "enable_search_box_radius",
      "label": "Curve Search Box Corners",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_search_input_radius",
      "label": "Curve Search Input Corners",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_search_box_shadow",
      "label": "Add Search Box Shadow",
      "default": true
    },
    {
      "type": "header",
      "content": "Sort Menu"
    },


    {
        "type": "color",
        "id": "sort_option_text_color",
        "label": "Sort Option Text Color",
        "default": "#000000"
      },
      {
        "type": "color",
        "id": "sort_option_background_color",
        "label": "Sort Option Background Color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "sort_option_active_text_color",
        "label": "Active Sort Option Text Color",
        "default": "#1B1B1B"
      },
      {
        "type": "color",
        "id": "sort_option_active_background_color",
        "label": "Active Sort Option Background Color",
        "default": "#EDEDED"
      },
      {
        "type": "color",
        "id": "sort_menu_handle_text_color",
        "label": "Sort Menu Handle Text Color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "sort_menu_handle_background_color",
        "label": "Sort Menu Handle Background Color",
        "default": "#FE0100"
      },
      {
        "type": "header",
        "content": "Pagination & Loading"
      },
      {
        "type": "select",
        "id": "pagination_type",
        "label": "Pagination Type",
        "options": [
          {
            "value": "infinite_scroll",
            "label": "Infinite Scroll"
          },
          {
            "value": "pagination",
            "label": "Page Numbers"
          }
        ],
        "default": "infinite_scroll",
        "info": "Choose between infinite scroll or traditional pagination with page numbers"
      },
      {
        "type": "color",
        "id": "pagination_text_color",
        "label": "Pagination Text Color",
        "default": "#000000"
      },
      {
        "type": "color",
        "id": "pagination_active_color",
        "label": "Active Page Color",
        "default": "#FE0100"
      },
      {
        "type": "color",
        "id": "pagination_arrow_color",
        "label": "Pagination Arrows Color",
        "default": "#000000",
        "info": "Color for the previous and next page arrows"
      },
      {
        "type": "color",
        "id": "pagination_active_text_color",
        "label": "Active Page Text Color",
        "default": "#FFFFFF",
        "info": "Text color for the current/active page number"
      }

  ]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}
